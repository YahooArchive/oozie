---
layout: default
title: Design
---

h2(#overview). Overview

Oozie workflows are actions arranged in a control dependency DAG (Direct Acyclic Graph).

An Oozie workflow may contain the following types of actions nodes: map-reduce, map-reduce streaming, map-reduce pipes, pig, file-system, sub-workflows, java, http (no yet implemented), email (not yet implemented) and ssh (deprecated).

Flow control operations within the workflow can be done using decision, fork and join nodes. Cycles in workflows are not supported.

!http:images/oozie-workflow.png(Oozie workflow)!

Actions and decisions can be parameterized with job properties, actions output (i.e. Hadoop counters) and HDFS file information (file exists, file size, etc). Formal parameters are expressed in the workflow definition as ${VAR} variables.

A Workflow application is an HDFS directory that contains the workflow definition (an XML file), all the necessary files to run all the actions: JAR files for Map/Reduce jobs, shells for streaming Map/Reduce jobs, native libraries, Pig scripts, and other resource files.

Running workflow jobs is done via command line tools, a WebServices API or a Java API.

Monitoring the system and workflow jobs can be done via a web console, the command line tools, the WebServices API and the Java API.

Oozie is a transactional system and it has built in automatic and manual retry capabilities.

In case of workflow job failure, the workflow job can be rerun skipping previously completed actions, the workflow application can be patched before being rerun.

h2(#capabilities). Current capabilities
* Workflow dependency management: Oozie runtime manages the dependencies and execute actions when all the dependencies are satisfied. Workflows depend on time and/or data arrival. Intra workflow dependency is usually a prior node job completion within the DAG. 
* Parameterization of action nodes: Oozie supports built in JSP expression language (EL) function for users to parameterize their workflow action. E.g. workflow name, action name, nominal start time is now available to actions.
* Synchronous datasets: Oozie workflows can also depend on synchronous input data set - These are also referred to as "clocked datasets", or those that are generated with regular periodicity.
* Native support for Streaming, M/R, PIG, HDFS jobs on Hadoop: Oozie supports most types of jobs on Hadoop. 
* WebService APIs: Oozie supports both command line and WebService APIs.
* GUI Monitoring: Oozie workflows can be monitored via a GUI interface as well as a WebService API. 

h2(#missingfeature). Most notable missing capabilities
* Support for Hive
* Support for HBase

h2(#system). System Requirements

* Unix
* Java 1.6+
* Tomcat 6+
* MySQL 5+ or HSQLDB 1.8+
* Hadoop 0.20+
* Pig 0.2+
